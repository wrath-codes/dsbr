[package]
name = "arrow-sus-shared"
version = "0.1.0"
edition = "2024"
license = "MIT"
repository = "https://github.com/wrath-codes/arrowsus"
homepage = "https://github.com/wrath-codes/arrowsus"
documentation = "https://docs.rs/arrow-sus-shared"
description = "Foundations for ArrowSUS: domain models, schemas, parsing, IO traits, and optional Polars/FTP tooling."
authors = ["wrath-codes and contributors"]
readme = "../../README.md"
keywords = ["arrowsus", "arrow", "data", "parsing", "polars"]
categories = ["data-structures", "parsing", "database"]
# When you later add PyO3 bindings in another crate, you'll set crate-type there.
# [lib]
# crate-type = ["rlib"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]


[dependencies]
# --- error, time, utils (tiny) ---
thiserror = { workspace = true, optional = false }
chrono = { workspace = true}
regex = { workspace = true }
once_cell = { workspace = true }
dashmap = { workspace = true, features = ["inline"] }
bytes = { workspace = true }
futures = { workspace = true }

# logging/observability
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }

# --- data formats / compute (keep lean by default) ---
arrow = { workspace = true, optional = false }     # schemas/types; used even without Polars
dbase = { workspace = true }                       # DBF/DBC headers & records (your parser module)

# Optional: only pulled with `--features polars`
polars = { workspace = true }
rayon = { workspace = true }

# --- IO backends (all optional) ---
suppaftp = { workspace = true }   # `--features ftp`
encoding_rs = { workspace = true }
async-trait = { workspace = true }
explode = { workspace = true }

reqwest = { workspace = true }

aws-config = { workspace = true } # `--features s3`
aws-sdk-s3 = { workspace = true }

# --- geo (optional & heavy) ---
# geo = { workspace = true, optional = true }
# proj = { workspace = true, optional = true }

# Async runtime (optional; only if you truly need it in the libâ€”prefer binaries/examples)
tokio = { workspace = true }
tokio-rustls = { workspace = true }

# Small helpers
itertools = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }

[dev-dependencies]
anyhow = { workspace = true }                      # dev/tests/examples only
tempfile = { workspace = true }
pretty_assertions = { workspace = true }
criterion = { workspace = true }
proptest = { workspace = true }

